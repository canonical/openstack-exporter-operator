#!/usr/bin/env python3

import os
import sys
import argparse
from urllib.request import urlretrieve

# Sync the dashboards from https://opendev.org/openstack/sunbeam-charms/src/branch/main/charms/openstack-exporter-k8s/src/grafana_dashboards
# Note: the base_url below is expected to be a 404 by itself.
BASE_URL = "https://opendev.org/openstack/sunbeam-charms/raw/branch/main/charms/openstack-exporter-k8s/src/grafana_dashboards/"
BASE_LOCAL_PATH = "./src/grafana_dashboards/"
DASHBOARDS = [
    "hypervisor-openstack-exporter-dashboard.json",
    "openstack-exporter.json",
    "overview-openstack-exporter-dashboard.json",
]


def sync_dashboard(url: str, local_path: str, check_mode: bool) -> bool:
    """Sync dashboard from url.

    If check_mode is True, don't actually update the file.
    Return True if the dashboard changed (or would be changed).
    """
    new_dashboard_path, _ = urlretrieve(url)

    changed = False
    if os.path.exists(local_path):
        with open(new_dashboard_path) as f1, open(local_path) as f2:
            changed = f1.read() != f2.read()
    else:
        changed = True

    if changed and not check_mode:
        os.replace(new_dashboard_path, local_path)

    return changed


def main(args: argparse.Namespace) -> bool:
    """Main entry point.

    Return False to indicate dashboards not up to date in check mode.
    """
    result = True
    for dashboard in DASHBOARDS:
        changed = sync_dashboard(
            BASE_URL + dashboard, BASE_LOCAL_PATH + dashboard, args.check
        )
        if changed:
            if args.check:
                result = False
                print(f"ERROR: {dashboard} not up to date")
            else:
                print(f"UPDATED: {dashboard} synced from remote source")
        else:
            print(f"OK: {dashboard} up to date")

    return result


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-c",
        "--check",
        action="store_true",
        help="If any dashboards are outdated, don't update them, but exit with value 1.",
    )
    args = parser.parse_args()

    if not main(args):
        sys.exit(1)
